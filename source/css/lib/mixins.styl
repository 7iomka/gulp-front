// @import 'nib'
@import 'variables'
@import 'mixins/font'
@import "../../../node_modules/stylus-type-utils/index.styl"

hard-reset()
	*
		margin 0
		padding 0
		border none


display(value)
	if (value == inline-block)
		display inline-block
		if(support-for-ie == true && support-ie-version <= 7)
			*:first-child+html &
				display inline
				zoom 1
				{block}
	else
		display value


overflow(value)
	if (value == ellipsis)
		white-space nowrap
		text-overflow ellipsis
		overflow hidden
	else
		overflow value


// Usage examle
// size 30px
// â†’
// width 30px
// height 30px
size( values... )
	if length( values ) == 1
		width values[ 0 ] || auto
		height values[ 0 ] || auto
	else
		width values[ 0 ] if values[ 0 ] != false
		height values[ 1 ] if values[ 1 ] != false


min-size( a, b = false )
	min-width a
	if b
		min-height b
	else
		min-height a


block( a, b = false )
	size a b
	display block


inline-block( a, b = false )
	size a b
	display inline-block


triangle( direction, size, face-color, back-color = transparent )
	width 0
	height 0
	border size solid back-color
	if direction == up || direction == down-left || direction == down-right
		border-bottom-color face-color
	if direction == down || direction == up-left || direction == up-right
		border-top-color face-color
	if direction == left || direction == down-right || direction == up-right
		border-right-color face-color
	if direction == right || direction == down-left || direction == up-left
		border-left-color face-color


// Usage examle
//  input
//  	+placeholder()
//			color grey
placeholder()
	if selector() == "&"
		error( "placeholder() must be called from a ruleset!" )
	&::-webkit-input-placeholder
		{block}
	&:-moz-placeholder
		{block}
	&::-moz-placeholder
		{block}
	&:-ms-input-placeholder
		{block}

user-select-none()
	-webkit-touch-callout none
	-khtml-user-select none
	user-select none


pt2px( pt )
	unit(pt/0.75, px)

ps-tracking( val )
	unit(val/1000, 'em')

clearfix()
	if(support-for-ie == true && support-ie-version <= 7)
		*:first-child+html &
			zoom 1
	&:before
	&:after
		content ""
		display table

	&:after
		clear both

micro-clearfix()
	content ""
	display: table
	clear both

selection( color )
	::selection
		background color
		{block}
	::-moz-selection
		background color
		{block}
	img::selection
		background transparent
		{block}
	img::-moz-selection
		background transparent
		{block}


/*
 * Font rendering OS X
 */
font-smoothing(active = true)
	if active == true
		-webkit-font-smoothing antialiased
		-moz-osx-font-smoothing grayscale
	else
		-webkit-font-smoothing subpixel-antialiased
		-moz-osx-font-smoothing auto


// Count size in persents
ps(parentSize, childSize)
	amount = (childSize / parentSize) * 100
	amount = floor(amount, 2)
	unit(amount, "%")


font-feature()
	-moz-font-feature-settings: "liga=1, dlig=1"
	-ms-font-feature-settings: "liga", "dlig"
	-webkit-font-feature-settings: "liga", "dlig"
	-o-font-feature-settings: "liga", "dlig"
	font-feature-settings: "liga", "dlig"

hyphens()
	-webkit-hyphens: auto
	-moz-hyphens: auto
	hyphens: auto

image-responsive(display = block)
	display display
	max-width 100% // Part 1: Set a maximum relative to the parent
	height auto // Part 2: Scale the height according to the width, otherwise you get stretching

ul-reset()
	ul
		margin 0
		padding 0
		{block}
